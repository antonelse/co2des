-- *********************** useful command

--for update
. ~/.ghcup/env
cabal update
cabal install tidal --lib

tidal_version

:t --command for understand a function

cmd + "dot" -- alternative way for hush

hush

setcps (160/60/4)

--metronome
d1 $ n "2 1 1 1" # s "hi"


-- *********************** comments section
--see osc_test.scl for OSC server initialization


-- *********************** OSC message examples
/ctrl sf param 0.4
/ctrl ss code msgn
--the first value is a (s)tring and the second value is a(f)loat
--cF is what you use for floating point controls. The second 0 or 1, for when tidal hasn't received that control yet.
--cS for strings
--cI for integers
--cT for time values (for using e.g. as the first parameter of fast/slow)
--cR for ratios

-- *********************** audio/OSC test


d1 $ every 2 (# djf (cF 1 "filter")) $ sound "bd sd [~ bd] [cp bd*2]" #gain 0.9

d2 $ slow (cT 0 "every") $ loopAt (cT 0 "pan") $ striate 4 $ sound "break:8 break:9"

d3 $ every 2 (hurry (cT 0 "pan")) $ loopAt (cT 0 "delay") $ chop 8 $ n "3 4" # sound "theme:10"

d4 $ s "808" # n (cF 1 "filter")

d4 silence

-- *********************** xfade function
:t xfade
xfadeIn 1 8
d1 $ s "bd*8?"


d3 $ every 2 (hurry (cT 0 "user3")) $ loopAt (cT 0 "user4") $ chop 8 $ n "3 4" # sound "theme:15"

xfadeIn 1 8 $ every 2 (hurry 4) $ loopAt (cT 0 "user4") $ chop 8 $ n "3 4" # sound "theme:15"

xfadeIn 1 8 $ s "808" # n (cF 1 "user4")

do d1 $ s "bd*8?"

let userPattern = every 2 (hurry (cT 0 "pan")) $




-- *********************** haskell various tests

addSix :: Num a => a -> a

addSix x = x + 6

addSix 3
--returns 9

-- *********************** PATTERN CHOICE TEST

:t every


xfadeIn 3 8 $ slowspread (striate) [8,16,32,64,128]
    $ sound "ct-noise:19 ct-noise:20 ct-noise:19"
    # cut "3 2"
    # gain "0.6"
    # up rand #pan rand
